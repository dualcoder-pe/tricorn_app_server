"""create additional tables

Revision ID: 6320797197b8
Revises: 3f788818317e
Create Date: 2025-06-10 01:05:34.397962

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6320797197b8'
down_revision: Union[str, None] = '3f788818317e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('index',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False, comment='고유 식별자'),
    sa.Column('symbol', sa.String(length=20), nullable=False, comment='인덱스 심볼'),
    sa.Column('value', sa.Float(), nullable=False, comment='지표 값'),
    sa.Column('date', sa.Date(), nullable=False, comment='데이터 기준 일자 (YYYY-MM-DD)'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol', 'date', name='uq_symbol_date')
    )
    op.create_index(op.f('ix_index_date'), 'index', ['date'], unique=False)
    op.create_table('price',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False, comment='고유 식별자'),
    sa.Column('symbol', sa.String(length=20), nullable=False, comment='종목 심볼'),
    sa.Column('open', sa.Float(), nullable=False, comment='시가'),
    sa.Column('high', sa.Float(), nullable=False, comment='고가'),
    sa.Column('low', sa.Float(), nullable=False, comment='저가'),
    sa.Column('close', sa.Float(), nullable=False, comment='종가'),
    sa.Column('volume', sa.Float(), nullable=False, comment='거래량'),
    sa.Column('timestamp', sa.DateTime(), nullable=False, comment='가격 데이터의 기준 시각 (UTC)'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol', 'timestamp', name='uq_symbol_timestamp')
    )
    op.create_index(op.f('ix_price_timestamp'), 'price', ['timestamp'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False, comment='고유 식별자'),
    sa.Column('uid', sa.String(length=64), nullable=False, comment='외부 시스템 연동용 유저 식별자'),
    sa.Column('name', sa.String(length=50), nullable=False, comment='사용자 이름'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uid')
    )
    op.create_table('account',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False, comment='고유 식별자'),
    sa.Column('user_id', sa.BigInteger(), nullable=False, comment='유저 ID'),
    sa.Column('name', sa.String(length=50), nullable=False, comment='계좌 이름'),
    sa.Column('balance', sa.Float(), nullable=False, comment='계좌 잔고'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False, comment='고유 식별자'),
    sa.Column('type', sa.Enum('buy', 'sell', name='ordertypeenum'), nullable=False, comment='주문 타입'),
    sa.Column('symbol', sa.String(length=50), nullable=False, comment='종목 심볼'),
    sa.Column('account_id', sa.BigInteger(), nullable=False, comment='계좌 ID'),
    sa.Column('date', sa.String(length=30), nullable=False, comment='주문일시'),
    sa.Column('size', sa.Float(), nullable=False, comment='주문 수량'),
    sa.Column('price', sa.Float(), nullable=False, comment='주문 단가'),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profit',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False, comment='고유 식별자'),
    sa.Column('user_id', sa.BigInteger(), nullable=False, comment='유저 ID'),
    sa.Column('account_id', sa.BigInteger(), nullable=False, comment='계좌 ID'),
    sa.Column('profit', sa.Float(), nullable=False, comment='수익률'),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('profit')
    op.drop_table('order')
    op.drop_table('account')
    op.drop_table('user')
    op.drop_index(op.f('ix_price_timestamp'), table_name='price')
    op.drop_table('price')
    op.drop_index(op.f('ix_index_date'), table_name='index')
    op.drop_table('index')
    # ### end Alembic commands ###
